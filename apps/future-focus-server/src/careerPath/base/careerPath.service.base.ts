/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, CareerPath as PrismaCareerPath } from "@prisma/client";

export class CareerPathServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.CareerPathCountArgs, "select">
  ): Promise<number> {
    return this.prisma.careerPath.count(args);
  }

  async careerPaths(
    args: Prisma.CareerPathFindManyArgs
  ): Promise<PrismaCareerPath[]> {
    return this.prisma.careerPath.findMany(args);
  }
  async careerPath(
    args: Prisma.CareerPathFindUniqueArgs
  ): Promise<PrismaCareerPath | null> {
    return this.prisma.careerPath.findUnique(args);
  }
  async createCareerPath(
    args: Prisma.CareerPathCreateArgs
  ): Promise<PrismaCareerPath> {
    return this.prisma.careerPath.create(args);
  }
  async updateCareerPath(
    args: Prisma.CareerPathUpdateArgs
  ): Promise<PrismaCareerPath> {
    return this.prisma.careerPath.update(args);
  }
  async deleteCareerPath(
    args: Prisma.CareerPathDeleteArgs
  ): Promise<PrismaCareerPath> {
    return this.prisma.careerPath.delete(args);
  }
}
