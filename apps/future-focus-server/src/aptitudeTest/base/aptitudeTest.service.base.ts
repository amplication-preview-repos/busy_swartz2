/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, AptitudeTest as PrismaAptitudeTest } from "@prisma/client";

export class AptitudeTestServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.AptitudeTestCountArgs, "select">
  ): Promise<number> {
    return this.prisma.aptitudeTest.count(args);
  }

  async aptitudeTests(
    args: Prisma.AptitudeTestFindManyArgs
  ): Promise<PrismaAptitudeTest[]> {
    return this.prisma.aptitudeTest.findMany(args);
  }
  async aptitudeTest(
    args: Prisma.AptitudeTestFindUniqueArgs
  ): Promise<PrismaAptitudeTest | null> {
    return this.prisma.aptitudeTest.findUnique(args);
  }
  async createAptitudeTest(
    args: Prisma.AptitudeTestCreateArgs
  ): Promise<PrismaAptitudeTest> {
    return this.prisma.aptitudeTest.create(args);
  }
  async updateAptitudeTest(
    args: Prisma.AptitudeTestUpdateArgs
  ): Promise<PrismaAptitudeTest> {
    return this.prisma.aptitudeTest.update(args);
  }
  async deleteAptitudeTest(
    args: Prisma.AptitudeTestDeleteArgs
  ): Promise<PrismaAptitudeTest> {
    return this.prisma.aptitudeTest.delete(args);
  }
}
